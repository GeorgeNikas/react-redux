{"version":3,"sources":["components/Counter.module.css","components/Header.module.css","components/UserProfile.module.css","store/counter.js","components/Counter.js","store/auth.js","components/Header.js","components/Auth.js","components/UserProfile.js","App.js","store/index.js","index.js","components/Auth.module.css"],"names":["module","exports","counterSlice","createSlice","name","initialState","counter","showCounter","reducers","increment","state","decrement","increase","action","payload","toggleCounter","counterActions","actions","Counter","dispatch","useDispatch","useSelector","show","className","classes","value","onClick","authSlice","isAuthenticated","login","logout","authActions","Header","isAuth","auth","header","href","Auth","onSubmit","event","preventDefault","control","htmlFor","type","id","UserProfile","profile","App","store","configureStore","reducer","counterReducer","authReducer","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.a4e23ca4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"counter\":\"Counter_counter__159_K\",\"value\":\"Counter_value__3cphx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__11-wJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"UserProfile_profile__1bM5k\"};","import { createSlice } from \"@reduxjs/toolkit\";\r\nconst initialCounterState = { counter: 0, showCounter: true };\r\n\r\nconst counterSlice = createSlice({\r\n    name: 'counter',\r\n    initialState: initialCounterState,\r\n    reducers: {\r\n        increment(state) {\r\n            state.counter++;\r\n        },\r\n        decrement(state) {\r\n            state.counter--;\r\n        },\r\n        increase(state, action) {\r\n            state.counter = state.counter + action.payload;\r\n        },\r\n        toggleCounter(state) {\r\n            state.showCounter = !state.showCounter;\r\n        }\r\n    }\r\n\r\n});\r\n\r\nexport const counterActions = counterSlice.actions;\r\n\r\n\r\nexport default counterSlice.reducer;\r\n","import { Component } from \"react\";\nimport { useSelector, useDispatch, connect } from \"react-redux\";\nimport { counterActions } from \"../store/counter\";\nimport classes from \"./Counter.module.css\";\n\nconst Counter = () => {\n  const dispatch = useDispatch();\n  const counter = useSelector((state) => state.counter.counter);\n  const show = useSelector((state) => state.counter.showCounter);\n\n  const incrementHandler = () => {\n    dispatch(counterActions.increment());\n  };\n\n  const increaseHandler = () => {\n    dispatch(counterActions.increase(10)); // { type: SOME_UNIQUE_IDENTIFIER , payload: }\n  }\n\n  const decrementHandler = () => {\n    dispatch(counterActions.decrement());\n  };\n\n  const toggleCounterHandler = () => {\n    dispatch(counterActions.toggleCounter());\n  };\n\n  return (\n    <main className={classes.counter}>\n      <h1>Redux Counter</h1>\n      {show && <div className={classes.value}>{counter}</div>}\n      <div>\n        <button onClick={incrementHandler}>Increment</button>\n        <button onClick={increaseHandler}>Increase by 10</button>\n        <button onClick={decrementHandler}>Decrement</button>\n      </div>\n      <button onClick={toggleCounterHandler}>Toggle Counter</button>\n    </main>\n  );\n};\n\nexport default Counter;\n\n// class Counter extends Component {\n//   incrementHandler() {\n//     this.props.increment();\n\n//   }\n//   decrementHandler() {\n//     this.props.decrement();\n\n//   }\n//   toggleCounterHandler() {\n\n//   }\n//   render() {\n//     return (\n//       <main className={classes.counter}>\n//         <h1>Redux Counter</h1>\n//         <div className={classes.value}>{this.props.counter}</div>\n//         <div>\n//           <button onClick={this.incrementHandler.bind(this)}>Increment</button>\n//           <button onClick={this.decrementHandler.bind(this)}>Decrement</button>\n//         </div>\n//         <button onClick={this.toggleCounterHandler}>Toggle Counter</button>\n//       </main>\n//     );\n//   }\n// }\n// const mapStateToProps = (state) => {\n//   return {\n//     counter: state.counter,\n//   };\n\n\n// }\n\n// const mapDispatchToProps = (dispatch) => {\n//   return {\n//     increment: () => dispatch({type: 'increment'}),\n//     decrement: () => dispatch({type: 'decrement'})\n//   }\n// }\n// export default connect(mapStateToProps, mapDispatchToProps)(Counter);\n","import { createSlice } from \"@reduxjs/toolkit\";\r\nconst initialAuthState = {\r\n    isAuthenticated: false,\r\n}\r\n\r\nconst authSlice = createSlice({\r\n    name:'authentication',\r\n    initialState: initialAuthState,\r\n    reducers: {\r\n        login(state) {\r\n            state.isAuthenticated = true;\r\n        },\r\n        logout(state) {\r\n            state.isAuthenticated = false;\r\n        },\r\n\r\n    },\r\n})\r\n\r\nexport const authActions = authSlice.actions;\r\n\r\n\r\nexport default authSlice.reducer;","import classes from \"./Header.module.css\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { authActions } from \"../store/auth\";\n\nconst Header = () => {\n  const dispatch = useDispatch();\n  const isAuth = useSelector((state) => state.auth.isAuthenticated);\n  const logoutHandler = () => {\n    dispatch(authActions.logout());\n  };\n  return (\n    <header className={classes.header}>\n      <h1>Redux Auth</h1>\n      {isAuth && (\n        <nav>\n          <ul>\n            <li>\n              <a href=\"/\">My Products</a>\n            </li>\n            <li>\n              <a href=\"/\">My Sales</a>\n            </li>\n            <li>\n              <button onClick={logoutHandler}>Logout</button>\n            </li>\n          </ul>\n        </nav>\n      )}\n    </header>\n  );\n};\n\nexport default Header;\n","import classes from './Auth.module.css';\nimport { useDispatch } from 'react-redux';\nimport { authActions } from '../store/auth';\n\nconst Auth = () => {\n  const dispatch = useDispatch();\n  const loginHandler = (event) => {\n    event.preventDefault();\n    dispatch(authActions.login());\n\n  };\n  return (\n    <main className={classes.auth}>\n      <section>\n        <form onSubmit={loginHandler}>\n          <div className={classes.control}>\n            <label htmlFor='email'>Email</label>\n            <input type='email' id='email' />\n          </div>\n          <div className={classes.control}>\n            <label htmlFor='password'>Password</label>\n            <input type='password' id='password' />\n          </div>\n          <button>Login</button>\n        </form>\n      </section>\n    </main>\n  );\n};\n\nexport default Auth;\n","import classes from './UserProfile.module.css';\n\nconst UserProfile = () => {\n  return (\n    <main className={classes.profile}>\n      <h2>My User Profile</h2>\n    </main>\n  );\n};\n\nexport default UserProfile;\n","import Counter from './components/Counter';\nimport {Fragment} from 'react';\nimport Header from './components/Header';\nimport Auth from './components/Auth';\nimport UserProfile from './components/UserProfile';\nimport {useSelector} from 'react-redux';\n\n\nfunction App() {\n  const isAuth = useSelector(state => state.auth.isAuthenticated);\n  return (\n    <Fragment>\n      <Header/>\n      {!isAuth && <Auth />}\n      {isAuth && <UserProfile/>}\n      <Counter/>\n    </Fragment>\n    \n  );\n}\n\nexport default App;\n\n//using redux ","//import { createStore, combineReducers } from \"redux\";\r\nimport { configureStore } from \"@reduxjs/toolkit\";\r\nimport counterReducer from \"./counter\";\r\nimport authReducer from './auth';\r\n\r\n\r\n// const counterReducer = (state = initialState, action) => {\r\n//   if (action.type === \"increment\") {\r\n//     return {\r\n//       counter: state.counter + 1,\r\n//       showCounter: state.showCounter,\r\n//     };\r\n//   }\r\n\r\n//   if (action.type === \"increase\") {\r\n//     return {\r\n//       counter: state.counter + action.amount,\r\n//       showCounter: state.showCounter,\r\n//     };\r\n//   }\r\n//   if (action.type === \"decrement\") {\r\n//     return {\r\n//       counter: state.counter - 1,\r\n//       showCounter: state.showCounter,\r\n//     };\r\n//   }\r\n\r\n//   if (action.type === \"toggle\") {\r\n//     return {\r\n//       counter: state.counter,\r\n//       showCounter: !state.showCounter,\r\n//     };\r\n//   }\r\n\r\n//   return state;\r\n// };\r\n\r\n\r\nconst store = configureStore({\r\n    reducer: { counter: counterReducer, auth: authReducer },\r\n});\r\n\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport { Provider } from \"react-redux\";\n\nimport \"./index.css\";\nimport App from \"./App\";\nimport store from \"./store/index\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <Provider store={store}>\n    <App />\n  </Provider>\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"auth\":\"Auth_auth__1LcAh\",\"control\":\"Auth_control__2SCHX\"};"],"sourceRoot":""}